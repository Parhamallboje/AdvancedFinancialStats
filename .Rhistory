RowVar <- function(x, ...){
rowSums((x - rowMeans(x, ...))^2, ...)/(dim(x)[2] - 1)
}
RowVar(chunks$1)
RowVar <- function(x, ...){
rowSums((x - rowMeans(x, ...))^2, ...)/(dim(x)[2] - 1))
RowVar <- function(x, ...) {
rowSums((x - rowMeans(x, ...))^2, ...)/(dim(x)[2] - 1)
}
RowVar(chunks$1)
RowVar <- function(x, ...) {
rowSums((x - rowMeans(x, ...))^2, ...)/(dim(x)[2] - 1)
}
chunks$1
RowVar <- function(x, ...) {
rowSums((x - rowMeans(x, ...))^2, ...)/(dim(x)[2] - 1)
}
rowVar(chunks$`1`)
RowVar <- function(x, ...) {
rowSums((x - rowMeans(x, ...))^2, ...)/(dim(x)[2] - 1)
}
lapply(chunks$`1`, var)
RowVar <- function(x, ...) {
rowSums((x - rowMeans(x, ...))^2, ...)/(dim(x)[2] - 1)
}
lapply(chunks, var)
RowVar <- function(x, ...) {
rowSums((x - rowMeans(x, ...))^2, ...)/(dim(x)[2] - 1)
}
lapply(chunks, mean)
q <- 10
nr <- length(y_t)
chunks <- split(y_t, rep(1:ceiling(q), each=q))
means <- apply(chunks, mean)
q <- 10
nr <- length(y_t)
chunks <- split(y_t, rep(1:ceiling(q), each=q))
means <- sapply(chunks, mean)
vars <- sapply(chunks, vars)
t_stat <- sqrt(q)* (means/sqrt(vars))
q <- 10
nr <- length(y_t)
chunks <- split(y_t, rep(1:ceiling(q), each=q))
means <- sapply(chunks, mean)
vars <- sapply(chunks, vars)
t_stat <- sqrt(q)* (means/sapply(vars,sqrt))
q <- 10
nr <- length(y_t)
chunks <- split(y_t, rep(1:ceiling(q), each=q))
means <- sapply(chunks, mean)
vars <- sapply(chunks, vars)
t_stat <- sapply(vars,sqrt)
q <- 10
nr <- length(y_t)
chunks <- split(y_t, rep(1:ceiling(q), each=q))
means <- sapply(chunks, mean)
vars <- sapply(chunks, vars)
t_stat <- vars^(0.5)
q <- 10
nr <- length(y_t)
chunks <- split(y_t, rep(1:ceiling(q), each=q))
means <- sapply(chunks, mean)
vars <- sapply(chunks, vars)
t_stat <- vars**(0.5)
q <- 10
nr <- length(y_t)
chunks <- split(y_t, rep(1:ceiling(q), each=q))
means <- sapply(chunks, mean)
vars <- sapply(chunks, vars)
class(vars)
t_stat <- vars**(0.5)
q <- 10
nr <- length(y_t)
chunks <- split(y_t, rep(1:ceiling(q), each=q))
means <- unlist(sapply(chunks, mean), use.names=FALSE)
vars <- unlist(sapply(chunks, vars), use.names=FALSE)
class(vars)
t_stat <- vars**(0.5)
q <- 10
nr <- length(y_t)
chunks <- split(y_t, rep(1:ceiling(q), each=q))
means <- as.vector(unlist(sapply(chunks, mean), use.names=FALSE))
vars <- as.vector(unlist(sapply(chunks, vars), use.names=FALSE))
class(vars)
t_stat <- vars**(0.5)
q <- 10
nr <- length(y_t)
chunks <- split(y_t, rep(1:ceiling(q), each=q))
means <- as.vector(unlist(sapply(chunks, mean), use.names=FALSE))
vars <- as.vector(unlist(sapply(chunks, vars), use.names=FALSE))
class(vars)
q <- 10
nr <- length(y_t)
chunks <- split(y_t, rep(1:ceiling(q), each=q))
means <- as.vector(unlist(sapply(chunks, mean), use.names=FALSE))
vars <- as.vector(unlist(sapply(chunks, vars), use.names=FALSE))
vars
q <- 10
nr <- length(y_t)
chunks <- split(y_t, rep(1:ceiling(q), each=q))
means <- apply(chunks, mean), use.names=FALSE)
q <- 10
nr <- length(y_t)
chunks <- split(y_t, rep(1:ceiling(q), each=q))
means <- apply(chunks, mean), use.names=FALSE))
q <- 10
nr <- length(y_t)
chunks <- split(y_t, rep(1:ceiling(q), each=q))
means <- apply(chunks, mean)
q <- 10
nr <- length(y_t)
chunks <- split(y_t, rep(1:ceiling(q), each=q))
means <- sapply(chunks, mean)
vars <- sapply(chunks, vars)
vars
q <- 10
nr <- length(y_t)
chunks <- split(y_t, rep(1:ceiling(q), each=q))
means <- lapply(chunks, mean)
vars <- lapply(chunks, vars)
vars
q <- 10
nr <- length(y_t)
chunks <- split(y_t, rep(1:ceiling(q), each=q))
means <- apply(chunks, mean)
q <- 10
nr <- length(y_t)
chunks <- split(y_t, rep(1:ceiling(q), each=q))
means <- sapply(chunks, mean)
vars <- sapply(chunks, vars)
vars
q <- 10
nr <- length(y_t)
chunks <- split(y_t, rep(1:ceiling(q), each=q))
means <- lapply(chunks, mean)
vars <- lapply(chunks, vars)
vars
q <- 10
nr <- length(y_t)
chunks <- split(y_t, rep(1:ceiling(q), each=q))
means <- lapply(chunks, mean)
vars <- lapply(chunks, vars)
unlist(vars)
q <- 10
nr <- length(y_t)
chunks <- split(y_t, rep(1:ceiling(q), each=q))
means <- lapply(chunks, mean)
vars <- lapply(chunks, vars)
unlist(vars$`1`)
q <- 10
nr <- length(y_t)
chunks <- split(y_t, rep(1:ceiling(q), each=q))
means <- lapply(chunks, mean)
vars <- lapply(chunks, var)
unlist(vars$`1`)
q <- 10
nr <- length(y_t)
chunks <- split(y_t, rep(1:ceiling(q), each=q))
means <- lapply(chunks, mean)
vars <- lapply(chunks, var)
unlist(vars)
q <- 10
nr <- length(y_t)
chunks <- split(y_t, rep(1:ceiling(q), each=q))
means <- lapply(chunks, mean)
vars <- lapply(chunks, var)
unlist(sqrt(vars))
q <- 10
nr <- length(y_t)
chunks <- split(y_t, rep(1:ceiling(q), each=q))
means <- lapply(chunks, mean)
vars <- lapply(chunks, var)
unlist(lapply(vars, sqrt))
q <- 10
nr <- length(y_t)
chunks <- split(y_t, rep(1:ceiling(q), each=q))
means <- lapply(chunks, mean)
vars <- lapply(chunks, var)
unlist(vars)
unlist(lapply(vars, sqrt))
q <- 10
nr <- length(y_t)
chunks <- split(y_t, rep(1:ceiling(q), each=q))
means <- lapply(chunks, mean)
vars <- lapply(chunks, var)
unlist(vars)
unlist(mean/lapply(vars, sqrt))
q <- 10
nr <- length(y_t)
chunks <- split(y_t, rep(1:ceiling(q), each=q))
means <- lapply(chunks, mean)
vars <- lapply(chunks, var)
unlist(vars)
unlist(mean/)
q <- 10
nr <- length(y_t)
chunks <- split(y_t, rep(1:ceiling(q), each=q))
means <- lapply(chunks, mean)
vars <- lapply(chunks, var)
mapply("/",mean,lapply(vars, sqrt),SIMPLIFY = FALSE)
q <- 10
nr <- length(y_t)
chunks <- split(y_t, rep(1:ceiling(q), each=q))
means <- lapply(chunks, mean)
vars <- lapply(chunks, var)
unlist(vars)
10*lapply(vars, sqrt)
q <- 10
nr <- length(y_t)
chunks <- split(y_t, rep(1:ceiling(q), each=q))
chunks_df <- do.call(rbind.data.frame, your_list)
q <- 10
nr <- length(y_t)
chunks <- split(y_t, rep(1:ceiling(q), each=q))
chunks_df <- do.call(rbind.data.frame, chunks)
chunks_df$means <- lapply(chunks, mean)
chunks_df$vars <- lapply(chunks, var)
q <- 10
nr <- length(y_t)
chunks <- split(y_t, rep(1:ceiling(q), each=q))
chunks_df <- do.call(rbind.data.frame, chunks)
chunks_df$means <- lapply(chunks, mean)
chunks_df$vars <- lapply(chunks, var)
chunks_df
q <- 10
nr <- length(y_t)
chunks <- split(y_t, rep(1:ceiling(q), each=q))
chunks_df <- do.call(rbind.data.frame, chunks)
chunks_df$means <- lapply(chunks, mean)
chunks_df$vars <- lapply(chunks, var)
chunks_df$t <- sqrt(q)* chunks_df$means/sqrt(chunks_df$vars)
q <- 10
nr <- length(y_t)
chunks <- split(y_t, rep(1:ceiling(q), each=q))
chunks_df <- do.call(rbind.data.frame, chunks)
chunks_df$means <- lapply(chunks, mean)
chunks_df$vars <- lapply(chunks, var)
chunks_df$t <- chunks_df$means/sqrt(chunks_df$vars)
q <- 10
nr <- length(y_t)
chunks <- split(y_t, rep(1:ceiling(q), each=q))
chunks_df <- do.call(rbind.data.frame, chunks)
chunks_df$means <- lapply(chunks, mean)
chunks_df$vars <- lapply(chunks, var)
chunks_df$t <- chunks_df$means/chunks_df$vars
q <- 10
nr <- length(y_t)
chunks <- split(y_t, rep(1:ceiling(q), each=q))
chunks_df <- do.call(rbind.data.frame, chunks)
chunks_df$means <- lapply(chunks, mean)
chunks_df$vars <- lapply(chunks, var)
chunks_df$means
q <- 10
nr <- length(y_t)
chunks <- split(y_t, rep(1:ceiling(q), each=q))
chunks_df <- do.call(rbind.data.frame, chunks)
chunks_df$means <- unlist(lapply(chunks, mean))
chunks_df$vars <- lapply(chunks, var)
chunks_df$means
q <- 10
nr <- length(y_t)
chunks <- split(y_t, rep(1:ceiling(q), each=q))
chunks_df <- do.call(rbind.data.frame, chunks)
chunks_df$means <- unlist(lapply(chunks, mean))
chunks_df$vars <- unlist(lapply(chunks, var))
chunks_df$means
q <- 10
nr <- length(y_t)
chunks <- split(y_t, rep(1:ceiling(q), each=q))
chunks_df <- do.call(rbind.data.frame, chunks)
chunks_df$means <- unlist(lapply(chunks, mean))
chunks_df$vars <- unlist(lapply(chunks, var))
chunks_df
q <- 10
nr <- length(y_t)
chunks <- split(y_t, rep(1:ceiling(q), each=q))
chunks_df <- do.call(rbind.data.frame, chunks)
chunks_df$means <- rowMeans(chunks_df)
chunks_df$vars <- unlist(lapply(chunks, var))
chunks_df
q <- 10
nr <- length(y_t)
chunks <- split(y_t, rep(1:ceiling(q), each=q))
chunks_df <- do.call(rbind.data.frame, chunks)
chunks_df$means <- rowMeans(chunks_df)
chunks_df$vars <- unlist(lapply(chunks, var))
chunks_df$means
q <- 10
nr <- length(y_t)
chunks <- split(y_t, rep(1:ceiling(q), each=q))
chunks_df <- do.call(rbind.data.frame, chunks)
chunks_df$means <- rowMeans(chunks_df)
chunks_df$vars <- unlist(lapply(chunks, var))
chunks_df$means
chunks_df$vars
q <- 10
nr <- length(y_t)
chunks <- split(y_t, rep(1:ceiling(q), each=q))
chunks_df <- do.call(rbind.data.frame, chunks)
chunks_df$means <- rowMeans(chunks_df)
chunks_df$vars <- unlist(lapply(chunks, var))
chunks_df$means/chunks_df$vars
q <- 10
nr <- length(y_t)
chunks <- split(y_t, rep(1:ceiling(q), each=q))
chunks_df <- do.call(rbind.data.frame, chunks)
chunks_df$means <- rowMeans(chunks_df)
chunks_df$vars <- unlist(lapply(chunks, var))
chunks_df$means/sqrt(chunks_df$vars)
q <- 10
nr <- length(y_t)
chunks <- split(y_t, rep(1:ceiling(q), each=q))
chunks_df <- do.call(rbind.data.frame, chunks)
chunks_df$means <- rowMeans(chunks_df)
chunks_df$vars <- unlist(lapply(chunks, var))
sqrt(q)*chunks_df$means/sqrt(chunks_df$vars)
q <- 10
nr <- length(y_t)
chunks <- split(y_t, rep(1:ceiling(q), each=q))
chunks_df <- do.call(rbind.data.frame, chunks)
chunks_df$means <- rowMeans(chunks_df)
chunks_df$vars <- unlist(lapply(chunks, var))
chunks_df$means/sqrt(chunks_df$vars)
q <- 10
nr <- length(y_t)
chunks <- split(y_t, rep(1:ceiling(q), each=q))
chunks_df <- do.call(rbind.data.frame, chunks)
chunks_df$means <- rowMeans(chunks_df)
chunks_df$vars <- unlist(lapply(chunks, var))
sqrt(q)*chunks_df$means/sqrt(chunks_df$vars)
q <- 10
nr <- length(y_t)
chunks <- split(y_t, rep(1:ceiling(q), each=q))
chunks_df <- do.call(rbind.data.frame, chunks)
chunks_df$means <- rowMeans(chunks_df)
chunks_df$vars <- unlist(lapply(chunks, var))
plot(sqrt(q)*chunks_df$means/sqrt(chunks_df$vars))
q <- 10
nr <- length(y_t)
chunks <- split(y_t, rep(1:ceiling(q), each=q))
chunks_df <- do.call(rbind.data.frame, chunks)
chunks_df$means <- rowMeans(chunks_df)
var_chunk<- var(chunks_df$means)
plot(sqrt(q)*mean(chunks_df$means)/sqrt(var_chunk))
q <- 10
nr <- length(y_t)
chunks <- split(y_t, rep(1:ceiling(q), each=q))
chunks_df <- do.call(rbind.data.frame, chunks)
chunks_df$means <- rowMeans(chunks_df)
var_chunk<- var(chunks_df$means)
sqrt(q)*mean(chunks_df$means)/sqrt(var_chunk)
library(readxl)
library(dplyr)
us_macro_quarterly1 <- read_excel("data/us_macro_quarterly1.xlsx")
data=us_macro_quarterly1
data <- data %>% filter(data$freq >= '1962-07-01')
#Compute the inflation rate
data$Inflat <- c(NA,400*diff(log(data$PCED)))
data <- data %>% filter(data$freq >= '1962-07-01')
#Compute the inflation rate
data$Inflat <- c(NA,400*diff(log(data$PCED)))
data$Inflat
data <- data %>% filter(data$freq >= '1962-07-01')
#Compute the inflation rate
data$Inflat <- c(NA,400*diff(log(data$PCED)))
plot(data$Inflat)
data <- data %>% filter(data$freq >= '1962-07-01')
#Compute the inflation rate
data$Inflat <- c(NA,400*diff(log(data$PCED)))
data1 <- data %>% filter(data$freq >= "1963-01-01")
plot(data1$freq,data1$Inflat, type="b", xlab = "Quarter from 1963-Q1 to 2017-Q4" , ylab = "Inflation growth", main = "Inflation growth throughout the quarters")
-#Graphically, we can clearly see that there is no linear trend and the mouvements look really random, therefore, the inflation look stochastic.
data1 <- data %>% filter(data$freq >= "1963-01-01")
plot(data1$freq,data1$Inflat, type="b", xlab = "Quarter from 1963-Q1 to 2017-Q4" , ylab = "Inflation growth", main = "Inflation growth throughout the quarters")
data1 <- data %>% filter(data$freq >= "1963-01-01")
plot(data1$freq,data1$Inflat, type="b", xlab = "Quarter from 1963-Q1 to 2017-Q4" , ylab = "Inflation growth", main = "Inflation growth throughout the quarters")
#Compute first four Autocorrelation of Inflat
#First create new column for delta Inflat
data$DeltaInflat <- c(NA,diff(data$Inflat))
data$DeltaInflat[is.na(data$DeltaInflat)] <- 0
head(data$DeltaInflat)
data2 <- data %>% filter(data$freq >= "1963-01-01")
acf(data$DeltaInflat, lag.max = 4, plot=TRUE)
#lag.plot(data$DeltaInflat, lags = 4, do.lines=FALSE)
data1 <- data %>% filter(data$freq >= "1963-01-01")
plot(data1$freq,data1$Inflat, type="b", xlab = "Quarter from 1963-Q1 to 2017-Q4" , ylab = "Inflation", main = "Inflation growth throughout the quarters")
data1 <- data %>% filter(data$freq >= "1963-01-01")
plot(data1$freq,data1$Inflat, type="b", xlab = "Quarter from 1963-Q1 to 2017-Q4" , ylab = "Inflation", main = "Inflation  throughout the quarters")
data1 <- data %>% filter(data$freq >= "1963-01-01")
plot(data1$freq,data1$Inflat, type="b", xlab = "Quarter from 1963-Q1 to 2017-Q4" , ylab = "Inflation", main = "Inflation throughout the quarters")
#Compute first four Autocorrelation of Inflat
#First create new column for delta Inflat
data$DeltaInflat <- c(NA,diff(data$Inflat))
data$DeltaInflat[is.na(data$DeltaInflat)] <- 0
data2 <- data %>% filter(data$freq >= "1963-01-01")
acf(data$DeltaInflat, lag.max = 4, plot=TRUE)
#lag.plot(data$DeltaInflat, lags = 4, do.lines=FALSE)
#Compute first four Autocorrelation of Inflat
#First create new column for delta Inflat
data$DeltaInflat <- c(NA,diff(data$Inflat))
data$DeltaInflat[is.na(data$DeltaInflat)] <- 0
data2 <- data %>% filter(data$freq >= "1963-01-01")
acf(data$DeltaInflat, lag.max = 4, plot=FALSE)
#lag.plot(data$DeltaInflat, lags = 4, do.lines=FALSE)
lag.plot(data$DeltaInflat, lags = 4, do.lines=FALSE)
plot(data$DeltaInflat)
plot(data2$DeltaInflat)
data1 <- data %>% filter(data$freq >= "1963-01-01")
plot(data1$freq,data1$Inflat, type="b", xlab = "Quarter from 1963-Q1 to 2017-Q4" , ylab = "Inflation", main = "Inflation throughout the quarters")
data2
plot(data2$freq,data2$DeltaInflat, type="b", xlab = "Quarter from 1963-Q1 to 2017-Q4" , ylab = " Delta_Inflation", main = "Change in Inflation throughout the quarters")
#Compute first four Autocorrelation of Inflat
#First create new column for delta Inflat
data$DeltaInflat <- c(NA,diff(data$Inflat))
data$DeltaInflat[is.na(data$DeltaInflat)] <- 0
data2 <- data %>% filter(data$freq >= "1963-01-01")
acf(data$DeltaInflat, lag.max = 4, plot=FALSE)
lag.plot(data$DeltaInflat, lags = 4, do.lines=FALSE)
plot( data2$freq ,data2$DeltaInflat, xlab = "Quarter from 1963-Q1 to 2017-Q4", ylab = "Change in inflation", main="Change in Inflation with respect to the time")
plot( data2$freq ,data2$DeltaInflat, type="b" xlab = "Quarter from 1963-Q1 to 2017-Q4", ylab = "Change in inflation", main="Change in Inflation with respect to the time")
plot( data2$freq ,data2$DeltaInflat, type="b", xlab = "Quarter from 1963-Q1 to 2017-Q4", ylab = "Change in inflation", main="Change in Inflation with respect to the time")
INFAR1 <- dynlm(ts(data2$DeltaInflat)~L(ts(data2$DeltaInflat,1)))
library(Rcpp)
library(rgdal)
library(sp)
library(raster)
library(datasets)
library(data.table)
library(xts)
library(lubridate)
library(dplyr)
library(quantmod)
library(PerformanceAnalytics)
library(readxl)
library(MASS)
library(readxl)
library(sandwich)
library(lmtest)
library(tseries)
library(dplyr)
library(ggplot2)
library(gridExtra)
library(dyn)
library(zoo)
library(dynlm)
library(urca)
library(tseries)
library(dyn)
library(sandwich)
library(lmtest)
getwd()
INFAR1 <- dynlm(ts(data2$DeltaInflat)~L(ts(data2$DeltaInflat,1)))
#coeftest(INFAR1, vcoc.=sandwich, type="NeweyWest")
summary(INFAR1)
#The t-test of the change in inflation at time t-1 is high therefore we reject the null hypothesis at 1% and we can say that the change in inflation at time t can be explained by the change of inflation at time t-1.
INFAR2 <- dynlm(ts(data2$DeltaInflat) ~ L(ts(data2$DeltaInflat,1))+ L(ts(data2$DeltaInflat,2)))
#coeftest(INFAR2, vcoc.=sandwich, type="NeweyWest")
summary(INFAR2)
#iii
#First compute the AR processes with lags n = 1 to 8
INFAR3 <- dynlm(ts(data2$DeltaInflat) ~ L(ts(data2$DeltaInflat,1))+ L(ts(data2$DeltaInflat,2))+L(ts(data2$DeltaInflat,3)))
INFAR4 <- dynlm(ts(data2$DeltaInflat) ~ L(ts(data2$DeltaInflat,1))+ L(ts(data2$DeltaInflat,2))+L(ts(data2$DeltaInflat,3))++L(ts(data2$DeltaInflat,4)))
INFAR5 <- dynlm(ts(data2$DeltaInflat) ~ L(ts(data2$DeltaInflat,1))+ L(ts(data2$DeltaInflat,2))+L(ts(data2$DeltaInflat,3))+L(ts(data2$DeltaInflat,4))+L(ts(data2$DeltaInflat,5)))
INFAR6 <- dynlm(ts(data2$DeltaInflat) ~ L(ts(data2$DeltaInflat,1))+ L(ts(data2$DeltaInflat,2))+L(ts(data2$DeltaInflat,3))+L(ts(data2$DeltaInflat,4))+L(ts(data2$DeltaInflat,5))+L(ts(data2$DeltaInflat,6)))
INFAR7 <- dynlm(ts(data2$DeltaInflat) ~ L(ts(data2$DeltaInflat,1))+ L(ts(data2$DeltaInflat,2))+L(ts(data2$DeltaInflat,3))+L(ts(data2$DeltaInflat,4))+L(ts(data2$DeltaInflat,5))+L(ts(data2$DeltaInflat,6))+L(ts(data2$DeltaInflat,7)))
INFAR8 <- dynlm(ts(data2$DeltaInflat) ~ L(ts(data2$DeltaInflat,1))+ L(ts(data2$DeltaInflat,2))+L(ts(data2$DeltaInflat,3))+L(ts(data2$DeltaInflat,4))+L(ts(data2$DeltaInflat,5))+L(ts(data2$DeltaInflat,6))+L(ts(data2$DeltaInflat,7))+L(ts(data2$DeltaInflat,8)))
#run BIC/AIC and select the smallest in each (expect AIC to be higher)
BIC(INFAR1,INFAR2,INFAR3,INFAR4,INFAR5,INFAR6,INFAR7,INFAR8)
AIC(INFAR1,INFAR2,INFAR3,INFAR4,INFAR5,INFAR6,INFAR7,INFAR8)
#BIC goes for the second lag as it is the smallest
#AIC goes for the lag 8, it makes sense as it is supposed to take larger lags compare to the BIC
#iii
#First compute the AR processes with lags n = 1 to 8
INFAR3 <- dynlm(ts(data2$DeltaInflat) ~ L(ts(data2$DeltaInflat,1))+ L(ts(data2$DeltaInflat,2))+L(ts(data2$DeltaInflat,3)))
INFAR4 <- dynlm(ts(data2$DeltaInflat) ~ L(ts(data2$DeltaInflat,1))+ L(ts(data2$DeltaInflat,2))+L(ts(data2$DeltaInflat,3))++L(ts(data2$DeltaInflat,4)))
INFAR5 <- dynlm(ts(data2$DeltaInflat) ~ L(ts(data2$DeltaInflat,1))+ L(ts(data2$DeltaInflat,2))+L(ts(data2$DeltaInflat,3))+L(ts(data2$DeltaInflat,4))+L(ts(data2$DeltaInflat,5)))
INFAR6 <- dynlm(ts(data2$DeltaInflat) ~ L(ts(data2$DeltaInflat,1))+ L(ts(data2$DeltaInflat,2))+L(ts(data2$DeltaInflat,3))+L(ts(data2$DeltaInflat,4))+L(ts(data2$DeltaInflat,5))+L(ts(data2$DeltaInflat,6)))
INFAR7 <- dynlm(ts(data2$DeltaInflat) ~ L(ts(data2$DeltaInflat,1))+ L(ts(data2$DeltaInflat,2))+L(ts(data2$DeltaInflat,3))+L(ts(data2$DeltaInflat,4))+L(ts(data2$DeltaInflat,5))+L(ts(data2$DeltaInflat,6))+L(ts(data2$DeltaInflat,7)))
INFAR8 <- dynlm(ts(data2$DeltaInflat) ~ L(ts(data2$DeltaInflat,1))+ L(ts(data2$DeltaInflat,2))+L(ts(data2$DeltaInflat,3))+L(ts(data2$DeltaInflat,4))+L(ts(data2$DeltaInflat,5))+L(ts(data2$DeltaInflat,6))+L(ts(data2$DeltaInflat,7))+L(ts(data2$DeltaInflat,8)))
#run BIC/AIC and select the smallest in each (expect AIC to be higher)
BIC(INFAR1,INFAR2,INFAR3,INFAR4,INFAR5,INFAR6,INFAR7,INFAR8)
#BIC goes for the second lag as it is the smallest
#AIC goes for the lag 8, it makes sense as it is supposed to take larger lags compare to the BIC
AIC(INFAR1,INFAR2,INFAR3,INFAR4,INFAR5,INFAR6,INFAR7,INFAR8)
#Create forecast with AR(2)
#Coefficients:
#                             Estimate Std. Error t value Pr(>|t|)
#(Intercept)                  0.009049   0.094039   0.096    0.923
#L(ts(data2$DeltaInflat, 1)) -0.317748   0.065540  -4.848 2.39e-06 ***
#L(ts(data2$DeltaInflat, 2)) -0.284351   0.065647  -4.332 2.27e-05 ***
#Value of deltainf2017Q4 is :
Q4 <- data2$DeltaInflat[220]
Q3 <- data2$DeltaInflat[219]
#Q3 <- data2$DeltaInflat[data2$freq == "2017-07-01"]
Deltainf2018Q1 <- 0.009049 + -0.317748* Q4 -0.284351 * Q3
Deltainf2018Q1
#Negative change expected with lag 2
#v
#Value of inflation Q4 2017
InfQ42017 <- data2$Inflat[220]
InfQ12018 <- InfQ42017 + Deltainf2018Q1
InfQ12018
#d
#i
#Use ADF test for the regression
#First create the function
DeltaInf_t2 <- dynlm(ts(data2$DeltaInflat)~L(ts(data2$DeltaInflat,1))+L(ts(data2$DeltaInflat,2))+L(ts(data2$Inflat,1)))
summary(DeltaInf_t2)
#ADF test unit root for Infl(t-1) is
ADFinf1 <- -0.10771/0.03888
ADFinf1
#the Augmented Dickey-Fuller test for the null hypothesis of a unit root of a univarate time series. Here the ADF t-test is -2.770319 which help us reject the null hypothesis at a 10% level of confidence and without time trend.
